spring:
  output.ansi.enabled: DETECT
  session.store-type: none
  data:
    mongodb:
      database: dcimporter
  rabbitmq:
    addresses: localhost
    username: guest
    password: guest

server:
  compression.enabled: true
  address: 127.0.0.1

application:
  url: http://localhost:3000
  security:
    fetchUserInfo: true
  syncDelay: 10000
  
publik:
  formTypeEM: demande-de-rendez-vous
  formTypeSVE: saisine-par-voie-electronique-new
  algo: sha256
  orig: ozwillo-dcimporter
  datacore:
    project: citizenreq_0
    modelEM: citizenreq:elecmeeting_0
    modelSVE: citizenreq:sve_0
    modelORG: orgfr:Organisation_0
    modelUser: citizenreq:user_0

marchesecurise:
  url:
    createConsultation: /webserv/?module=dce|serveur_crea_dce
    updateConsultation: /webserv/?module=dce|serveur_modif_dce
    deleteConsultation: /webserv/?module=dce|serveur_suppr_dce
    publishConsultation: /webserv/?module=dce|serveur_publication_dce
    lot: /webserv/?module=dce|serveur_lot_dce
    piece: /webserv/?module=dce|serveur_fichier_dce

amqp:
  config:
      exchangerName: dcimporter
      marchesecurise:
        queueName: marchesecurise
        bindingKey: marchepublic_0.#
      maarch:
        queueName: maarch
        bindingKey: citizenreq_0.#
      publik:
        queueName: publik
        bindingKey: citizenreq_0.#

kernel:
  baseUri: https://kernel.ozwillo-preprod.eu
  tokenEndpoint: ${kernel.baseUri}/a/token
  clientId: dcimporter
  clientSecret: secret

datacore:
  containerUrl: http://data.ozwillo.com
  url: https://data.ozwillo-preprod.eu
  systemAdminUser:  # Get it using Node.js lib / with DC importer clientId
    refreshToken: refreshToken
    nonce: changeit      #Set it when getting the refreshToken
  baseUri: http://data.ozwillo.com/dc/type

